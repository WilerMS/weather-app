{"version":3,"sources":["Elements/Animations.jsx","Components/Form.jsx","Elements/CityNameElements.jsx","Components/Header.jsx","Icons/001-cloudyday.svg","Icons/036-night.svg","Icons/002-sunny.svg","Icons/021-cloudy night.svg","Icons/033-rainy day.svg","Icons/011-night.svg","Icons/032-snowy.svg","Icons/010-night.svg","Icons/003-sunny.svg","Icons/007-windy.svg","Icons/022-humidity.svg","Icons/024-temperature.svg","Icons/025-temperature.svg","const/conditionsCodes.js","const/Icons.js","Components/WeatherInfo.jsx","Elements/AppElements.jsx","Components/MoreWeatherItem.jsx","Components/MoreWeatherInfo.jsx","Components/Svg.jsx","Components/Mountain.jsx","Icons/cloud.png","Icons/rain.png","config/dataParticles.js","Components/Particle.jsx","Components/Background.jsx","const/ImgMountains.js","Images/Mountains/001.png","Images/Mountains/002.png","Images/Mountains/003.png","Images/Mountains/004.png","Images/Mountains/005.png","Images/Mountains/006.png","Images/Mountains/007.png","Images/Mountains/008.png","Images/Mountains/009.png","const/GeoLocation.js","hooks/useWeather.jsx","App.js","index.js"],"names":["AnimationIn","keyframes","Container","styled","form","Input","input","Button","button","Form","enableFormCity","setEnableFormCity","fetchWeather","useState","city","setCity","onSubmit","e","preventDefault","toLowerCase","type","onChange","target","value","placeholder","className","H1","p","Icon","div","CityName","name","country","ButtonEditCity","onClick","ContainerHeader","Header","weather","conditions","clouds","rain","snow","fog","clear","DayIcons","cloudyDay","clearDay","RainDay","SnowDay","MistDay","NightIcons","cloudyNight","clearNight","RainNight","SnowNight","MistNight","MoreIcons","humidity","minTemp","maxTemp","WeatherInfo","now","main","image","includes","src","alt","temp","Math","round","description","bgColors","props","MoreWeatherItem","children","MoreWeatherInfo","tempMin","tempMax","Svg","xmlns","version","width","height","viewBox","preserveAspectRatio","transform","fill","stroke","d","img","Mountain","mountain","current","ParticlesNight","ParticlesSnow","ParticlesSun","ParticlesCloud","ParticlesRain","JSON","parse","particles","shape","cloud","ContainerParticles","Particle","params","BgContainer","Background","mountains","latitude","longitude","navigator","geolocation","getCurrentPosition","position","coords","API_KEY","process","useWeather","setWeather","useRef","floor","random","param","localStorage","getItem","API_URL","query","fetch","then","response","json","location","forecast","console","log","newWeather","temp_c","unixTime","localtime_epoch","condition","text","code","forecastday","day","maxtemp_c","mintemp_c","is_day","hours","setItem","catch","error","App","useEffect","vh","window","innerHeight","document","documentElement","style","setProperty","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.67178a60.chunk.js","sourcesContent":["import {keyframes} from 'styled-components'\r\n\r\nconst AnimationIn = keyframes`\r\n    0% {\r\n        opacity: .5;\r\n    }\r\n    100%{\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst AnimationOut = keyframes`\r\n    0% {\r\n        opacity: 1;\r\n    }\r\n    100%{\r\n        opacity: .5;\r\n    }\r\n`;\r\n\r\nexport {AnimationIn, AnimationOut};","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {AnimationIn} from './../Elements/Animations'\r\n\r\nconst Form = ({enableFormCity, setEnableFormCity, fetchWeather}) => {\r\n\r\n    const [city, setCity] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setCity(e.target.value);\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setEnableFormCity(!enableFormCity);\r\n        city !== \"\" && fetchWeather(city.toLowerCase());\r\n        setCity(\"\");\r\n    }\r\n\r\n    return(\r\n        <Container onSubmit={handleSubmit}>\r\n            <Input \r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                value={city}\r\n                placeholder=\"Write your city...\"\r\n            />\r\n            <Button type=\"submit\">\r\n                <i className=\"fas fa-search\"></i>    \r\n            </Button>        \r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.form`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    position: relative;\r\n    animation: ${AnimationIn} .5s ease;\r\n    animation-direction: alternate;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    color: white;\r\n    text-shadow: 1px 1px 4px #0000002e;\r\n    padding: 0;\r\n    padding-right: 30px;\r\n    width: 65%;\r\n    height: 35px;\r\n    font-size: 25px;\r\n    font-weight: 500;\r\n    outline: none;\r\n    background: none;\r\n    border: none;\r\n    font-weight: bold;\r\n    /*border-bottom: 1px solid #0b272f;*/\r\n\r\n    &::placeholder { \r\n        color: white;\r\n        opacity: 1; \r\n    }\r\n`;\r\n\r\nconst Button = styled.button`\r\n    color: white;\r\n    text-shadow: 1px 1px 4px #0000002e;\r\n    font-size: 25px;\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 25px;\r\n    cursor: pointer;\r\n    transition: .5s ease all;\r\n\r\n    &:hover {\r\n        transform: scale(1.2);\r\n    }\r\n`;\r\n\r\nexport default Form;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {AnimationIn} from './../Elements/Animations'\r\n\r\nconst H1 = styled.p`\r\n    margin: 0;\r\n    margin-bottom: 3px;\r\n    width: 65%;\r\n    height: 30px;\r\n    font-size: 25px;\r\n    transition: .3s all ease;\r\n    font-weight: 500;\r\n    animation: ${AnimationIn} .5s ease;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n\r\n    @media (min-width: 600px) {\r\n        font-size: 28px;\r\n    }\r\n`;\r\n\r\nconst Icon = styled.div`\r\n    font-size: 25px;\r\n    margin-right: 15px;\r\n    text-shadow: 0px 0px 5px #0000008c;\r\n    animation: ${AnimationIn} .5s ease;\r\n    margin-left: 30px;\r\n`;\r\n\r\nconst CityName = ({name, country}) => {\r\n    return (\r\n        <>\r\n            <Icon>\r\n                <i className=\"fas fa-map-marker-alt\"></i>\r\n            </Icon>\r\n            <H1>{`\r\n                    ${name ? name : ''}\r\n                    ${country ? ', ' + country : ''}\r\n            `}</H1>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ButtonEditCity = ({setEnableFormCity, enableFormCity}) => {\r\n\r\n    const handleClick = () => {\r\n        setEnableFormCity(!enableFormCity);\r\n    }\r\n\r\n    return (\r\n        <Button onClick={handleClick}>\r\n            <i className=\"fas fa-edit\"></i>\r\n        </Button>\r\n    )\r\n}\r\n\r\nconst Button = styled.button`\r\n    text-shadow: 0px 0px 5px #0000008d;\r\n    color: white;\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    font-size: 25px;\r\n    position: absolute;\r\n    bottom: 1px;\r\n    right: 25px;\r\n    transition: .5s all ease;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transform: scale(1.2);\r\n    }\r\n`;\r\n\r\nexport {CityName, ButtonEditCity};","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Form from './Form'\r\nimport {CityName, ButtonEditCity} from './../Elements/CityNameElements'\r\n\r\nconst Header = ({weather, fetchWeather}) => {\r\n\r\n    const [enableFormCity, setEnableFormCity] = useState(false);\r\n\r\n    return (\r\n        <ContainerHeader>\r\n            {enableFormCity ? (\r\n                <Form \r\n                    enableFormCity={enableFormCity} \r\n                    setEnableFormCity={setEnableFormCity}\r\n                    fetchWeather={fetchWeather}\r\n                />\r\n            ):(\r\n                <>\r\n                    <CityName \r\n                        name={weather.name} \r\n                        country={weather.country}\r\n                    />\r\n                    <ButtonEditCity \r\n                        enableFormCity={enableFormCity} \r\n                        setEnableFormCity={setEnableFormCity}\r\n                    />\r\n                </>\r\n            )}\r\n        </ContainerHeader>\r\n    )\r\n}\r\n\r\nconst ContainerHeader = styled.div`\r\n    color: white;\r\n    height: 75px;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: flex-start;\r\n    text-shadow: 0px 0px 5px #0000008c;\r\n`;\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/001-cloudyday.3be6b9ca.svg\";","export default __webpack_public_path__ + \"static/media/036-night.5bad99a1.svg\";","export default __webpack_public_path__ + \"static/media/002-sunny.3548c7e2.svg\";","export default __webpack_public_path__ + \"static/media/021-cloudy night.b503ff7a.svg\";","export default __webpack_public_path__ + \"static/media/033-rainy day.588fecac.svg\";","export default __webpack_public_path__ + \"static/media/011-night.11544d77.svg\";","export default __webpack_public_path__ + \"static/media/032-snowy.0083c56e.svg\";","export default __webpack_public_path__ + \"static/media/010-night.20420062.svg\";","export default __webpack_public_path__ + \"static/media/003-sunny.28d03e9c.svg\";","export default __webpack_public_path__ + \"static/media/007-windy.09f7e476.svg\";","export default __webpack_public_path__ + \"static/media/022-humidity.a0203bab.svg\";","export default __webpack_public_path__ + \"static/media/024-temperature.e17b1b7f.svg\";","export default __webpack_public_path__ + \"static/media/025-temperature.a76fe8ce.svg\";","const clear = [1000];\r\nconst clouds = [1003,1006,1009];\r\nconst rain = [1063,1072,1195,1198,1201,1204,1210,1150,1153,1168,1171,1180,1183,1186,1189,1192,1195,1198,1201,1204,1207,1240,1243,1246];\r\nconst snow = [1066,1114,1210,1213,1216,1219,1222,1225,1237,1255,1258,1261,1264,1279,1282,1117];\r\nconst fog = [1030,1135,1147];\r\n\r\nconst conditions = { clouds, rain, snow, fog, clear }\r\nexport default conditions;","import cloudyDay from './../Icons/001-cloudyday.svg';\r\nimport cloudyNight from './../Icons/036-night.svg';\r\n\r\nimport clearDay from './../Icons/002-sunny.svg';\r\nimport clearNight from './../Icons/021-cloudy night.svg';\r\n\r\nimport RainDay from './../Icons/033-rainy day.svg';\r\nimport RainNight from './../Icons/011-night.svg';\r\n\r\nimport SnowDay from './../Icons/032-snowy.svg';\r\nimport SnowNight from './../Icons/010-night.svg';\r\n\r\nimport MistDay from './../Icons/003-sunny.svg';\r\nimport MistNight from './../Icons/007-windy.svg';\r\n\r\nimport humidity from './../Icons/022-humidity.svg'\r\nimport minTemp from './../Icons/024-temperature.svg'\r\nimport maxTemp from './../Icons/025-temperature.svg'\r\n\r\nimport conditions from './../const/conditionsCodes'\r\n\r\nconst DayIcons = [cloudyDay, clearDay, RainDay, SnowDay, MistDay];\r\nconst NightIcons = [cloudyNight, clearNight, RainNight, SnowNight, MistNight];\r\nconst MoreIcons = [humidity, minTemp, maxTemp];\r\n\r\nconst setIcon = (now, main) => {\r\n    if (conditions.clear.includes(main)){\r\n        return (now) ? DayIcons[1] : NightIcons[1];\r\n    } else if (conditions.clouds.includes(main)) {\r\n        return (now) ? DayIcons[0] : NightIcons[0];\r\n    } else if (conditions.rain.includes(main)) {\r\n        return (now) ? DayIcons[2] : NightIcons[2];\r\n    } else if (conditions.snow.includes(main)) {\r\n        return (now) ? DayIcons[3] : NightIcons[3];\r\n    } else if (conditions.fog.includes(main)) {\r\n        return (now) ? DayIcons[4] : NightIcons[4];\r\n    }\r\n}\r\n\r\n\r\nexport {setIcon, MoreIcons};\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {setIcon} from '../const/Icons'\r\n\r\nconst WeatherInfo = ({weather}) => {\r\n    \r\n    const image = setIcon(weather.now, weather.main);\r\n\r\n    return (\r\n        <Container>\r\n            <img src={image} alt=\"\"/>\r\n            <div className=\"content__info\">\r\n                <h1>{weather.temp ? Math.round(weather.temp) + 'º' : ''}</h1>\r\n                <p>{`${weather.description ? 'Description: ' + weather.description : ''}`}</p>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 55%;\r\n    margin-top: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n\r\n    & > img {\r\n      max-width: 100%;\r\n      width: 55%;\r\n      -webkit-filter: drop-shadow(5px 5px 5px #222);\r\n      filter: drop-shadow(0px 2px 10px #0000003b);\r\n    }\r\n\r\n    .content__info {\r\n      width: 100%;\r\n      text-align: right;\r\n      position: relative;\r\n\r\n        & > h1 {\r\n            margin: 0;\r\n            margin-right: 20px;\r\n            margin-top: 1px;\r\n            font-size: 160px;\r\n            color: #d5e1e7;\r\n            text-shadow: 1px 1px 4px #0000002e;\r\n            }\r\n        & > p {\r\n            margin: 0;\r\n            position: absolute;\r\n            right: 15px;\r\n            bottom: 10px;\r\n            font-weight: 600;\r\n            text-shadow: 1px 1px 4px #0000002e;\r\n            color: white;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default WeatherInfo;","import styled from 'styled-components'\r\nimport {AnimationIn} from './Animations'\r\n\r\nconst bgColors = {\r\n  dayPrimary: '#56e2d7',\r\n  daySecundary: '#58d5f1',\r\n  nightPrimary: '#043338',\r\n  nightSecundary: '#041f25'\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n    \r\n  background: linear-gradient(to bottom, ${(props) => props.now ? \r\n    `${bgColors.dayPrimary}, ${bgColors.daySecundary} ` \r\n  : `${bgColors.nightPrimary}, ${bgColors.nightSecundary}`\r\n  });\r\n  transition: 1s all ease;\r\n  animation: ${AnimationIn} .5s linear;\r\n  overflow: hidden;\r\n  position: relative;\r\n  z-index: 0;\r\n\r\n  @media (min-width: 600px) {\r\n    width: 80%;\r\n    height: 90%;\r\n    max-width: 883px;\r\n    box-shadow: 0px 0px 10px 0px #00000040;\r\n    border: 1px solid #008b9a;\r\n    border-radius: 35px;\r\n  }\r\n`;\r\n\r\nexport {Container};","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst MoreWeatherItem = ({weather, children}) => {\r\n    return (\r\n        <Container now={weather.now}>\r\n            {children}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst bgColors = {\r\n    dayPrimary: '#ffffffad',\r\n    daySecundary: '#04202600',\r\n    nightPrimary: '#ffffff52',\r\n    nightSecundary: '#04202600'\r\n}\r\n\r\nconst Container = styled.div`\r\n    float: left;\r\n    width: 130px;\r\n    height: 100%;\r\n    background: white;\r\n    border-radius: 20px;\r\n    margin-left: 10px;\r\n    margin-right: 5px;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: linear-gradient(to bottom, ${(props) => props.now === 'day' ? \r\n            `${bgColors.dayPrimary}, ${bgColors.daySecundary} ` \r\n        :   `${bgColors.nightPrimary}, ${bgColors.nightSecundary}`});\r\n\r\n    & > img {\r\n        width: 50%;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    & > p {\r\n        margin: 0;\r\n        font-weight: bold;\r\n        color: white;\r\n        text-shadow: 1px 1px 10px black;\r\n    }\r\n`;\r\n\r\nexport  default MoreWeatherItem;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MoreWeatherItem from './MoreWeatherItem'\r\nimport {MoreIcons} from './../const/Icons'\r\n\r\nconst MoreWeatherInfo = ({weather}) => {\r\n    return (\r\n        <Container>\r\n                <MoreWeatherItem weather={weather}>\r\n                    <img src={MoreIcons[0]} alt=\"\"/>\r\n                    <p>Humidity</p>\r\n                    <p>{weather.humidity}%</p>\r\n                </MoreWeatherItem>\r\n                <MoreWeatherItem weather={weather}>\r\n                    <img src={MoreIcons[1]} alt=\"\"/>\r\n                    <p>Min Temp</p>\r\n                    <p>{weather.tempMin}</p>\r\n                </MoreWeatherItem>\r\n                <MoreWeatherItem weather={weather}>\r\n                    <img src={MoreIcons[2]} alt=\"\"/>\r\n                    <p>Max Temp</p>\r\n                    <p>{weather.tempMax}</p>\r\n                </MoreWeatherItem>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 20%;\r\n    margin-top: 20px;\r\n    overflow-x: hidden;\r\n    overflow-y: hidden;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    transition: .5s all ease;\r\n\r\n    @media (min-width: 600px) {\r\n        &::-webkit-scrollbar-thumb {\r\n            background-color: white;\r\n        }\r\n        width: 75%;\r\n        justify-content:flex-start;\r\n    }\r\n\r\n    &::-webkit-scrollbar {\r\n        background: none;\r\n        height: 5px;\r\n    }\r\n`;\r\n\r\nexport default MoreWeatherInfo;","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Svg = ({now}) => {\r\n    return (\r\n        <Container>\r\n            <svg \r\n                xmlns=\"http://www.w3.org/2000/svg\" \r\n                version=\"1.0\" \r\n                width=\"1000.000000pt\" \r\n                height=\"1000.000000pt\" \r\n                viewBox=\"0 0 1000.000000 1000.000000\" \r\n                preserveAspectRatio=\"none\"\r\n            >\r\n                <g \r\n                    transform=\"translate(0.000000,1000.000000) scale(0.100000,-0.100000)\" \r\n                    fill={now ? `#00aeca94` : `#042e33b3`} \r\n                    stroke=\"none\"\r\n                >\r\n                    <path d=\"M0 7470 l0 -2529 72 -103 c500 -717 1162 -1434 1864 -2019 714 -595 1473 -1087 2319 -1504 1677 -826 3502 -1265 5458 -1311 l287 -7 0 5001 0 5002 -5000 0 -5000 0 0 -2530z\"/>\r\n                </g>\r\n            </svg>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 70%;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n\r\n    & > svg {\r\n        max-height: 100%;\r\n        max-width: 100%;\r\n    }\r\n`;\r\n\r\nexport default Svg;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {AnimationIn} from './../Elements/Animations'\r\n\r\n\r\nconst Mountain = ({weather, mountain}) => {\r\n    return (\r\n        <Container src={mountain.current} alt=\"\"/>\r\n    )\r\n}\r\n\r\nconst Container = styled.img`\r\n    position: absolute;\r\n    height: 60%;\r\n    right: -50%;\r\n    bottom: 0;\r\n    z-index: 0;\r\n    opacity: 1;\r\n    transition: .5s all ease;\r\n    animation: ${AnimationIn} .5s ease;\r\n`;\r\n\r\nexport default Mountain;","export default __webpack_public_path__ + \"static/media/cloud.9c779a07.png\";","export default __webpack_public_path__ + \"static/media/rain.4c25c7c5.png\";","import cloud from './../Icons/cloud.png'\r\nimport rain from './../Icons/rain.png'\r\n\r\nlet ParticlesNight = `\r\n{\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 128,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 1104.8066982851817\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#ffffff\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"circle\",\r\n        \"stroke\": {\r\n          \"width\": 0,\r\n          \"color\": \"#000000\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 5\r\n        },\r\n        \"image\": {\r\n          \"src\": \"img/github.svg\",\r\n          \"width\": 100,\r\n          \"height\": 100\r\n        }\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 1,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": true,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 3,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 4,\r\n          \"size_min\": 0.3,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": false,\r\n        \"distance\": 150,\r\n        \"color\": \"#ffffff\",\r\n        \"opacity\": 0.4,\r\n        \"width\": 1\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 1,\r\n        \"direction\": \"none\",\r\n        \"random\": true,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 600,\r\n          \"rotateY\": 600\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"canvas\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": true,\r\n          \"mode\": \"bubble\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": true,\r\n          \"mode\": \"repulse\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 400,\r\n          \"line_linked\": {\r\n            \"opacity\": 1\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 250,\r\n          \"size\": 0,\r\n          \"duration\": 2,\r\n          \"opacity\": 0,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 400,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    },\r\n    \"retina_detect\": true\r\n  }\r\n`;\r\nlet ParticlesSnow = `\r\n  {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 400,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 800\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#fff\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"circle\",\r\n        \"stroke\": {\r\n          \"width\": 0,\r\n          \"color\": \"#000000\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 4\r\n        },\r\n        \"image\": {\r\n          \"src\": \"img/github.svg\",\r\n          \"width\": 100,\r\n          \"height\": 100\r\n        }\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 0.5,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 8,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 40,\r\n          \"size_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": false,\r\n        \"distance\": 500,\r\n        \"color\": \"#ffffff\",\r\n        \"opacity\": 0.4,\r\n        \"width\": 2\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 1,\r\n        \"direction\": \"bottom\",\r\n        \"random\": false,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 600,\r\n          \"rotateY\": 1200\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"canvas\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": false,\r\n          \"mode\": \"bubble\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": false,\r\n          \"mode\": \"repulse\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 400,\r\n          \"line_linked\": {\r\n            \"opacity\": 0.5\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 400,\r\n          \"size\": 4,\r\n          \"duration\": 0.3,\r\n          \"opacity\": 1,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 200,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    },\r\n    \"retina_detect\": true\r\n  }\r\n`;\r\nlet ParticlesSun = `\r\n  {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 38,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 1736.124811591\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#ffffff\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"polygon\",\r\n        \"stroke\": {\r\n          \"width\": 0,\r\n          \"color\": \"#000\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 6\r\n        },\r\n        \"image\": {\r\n          \"src\": \"img/github.svg\",\r\n          \"width\": 100,\r\n          \"height\": 100\r\n        }\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 0.2683101981549727,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 19.728691040806815,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": true,\r\n          \"speed\": 10,\r\n          \"size_min\": 40,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": false,\r\n        \"distance\": 200,\r\n        \"color\": \"#ffffff\",\r\n        \"opacity\": 1,\r\n        \"width\": 2\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 3.4,\r\n        \"direction\": \"none\",\r\n        \"random\": false,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 600,\r\n          \"rotateY\": 1200\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"canvas\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": false,\r\n          \"mode\": \"grab\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": false,\r\n          \"mode\": \"push\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 400,\r\n          \"line_linked\": {\r\n            \"opacity\": 1\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 400,\r\n          \"size\": 40,\r\n          \"duration\": 2,\r\n          \"opacity\": 8,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 200,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    },\r\n    \"retina_detect\": true\r\n  }\r\n`;\r\nlet ParticlesCloud = `\r\n  {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 8,\r\n        \"density\": {\r\n          \"enable\": false,\r\n          \"value_area\": 800\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#1b1e34\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"image\",\r\n        \"stroke\": {\r\n          \"width\": 0,\r\n          \"color\": \"#000\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 6\r\n        },\r\n        \"image\": {\r\n          \"src\": \"https://i.pinimg.com/originals/a0/e2/58/a0e2587a7e91830aed9a530bb26d4a3c.png\",\r\n          \"width\": 100,\r\n          \"height\": 100\r\n        }\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 0.5,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 78.91476416322726,\r\n        \"random\": false,\r\n        \"anim\": {\r\n          \"enable\": true,\r\n          \"speed\": 10,\r\n          \"size_min\": 40,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": false,\r\n        \"distance\": 200,\r\n        \"color\": \"#ffffff\",\r\n        \"opacity\": 1,\r\n        \"width\": 2\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 1.9,\r\n        \"direction\": \"left\",\r\n        \"random\": false,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 600,\r\n          \"rotateY\": 1200\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"canvas\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": false,\r\n          \"mode\": \"grab\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": false,\r\n          \"mode\": \"push\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 400,\r\n          \"line_linked\": {\r\n            \"opacity\": 1\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 400,\r\n          \"size\": 40,\r\n          \"duration\": 2,\r\n          \"opacity\": 8,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 200,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    },\r\n    \"retina_detect\": true\r\n  }\r\n`;\r\nlet ParticlesRain = `\r\n  {\r\n    \"particles\": {\r\n      \"number\": {\r\n        \"value\": 350,\r\n        \"density\": {\r\n          \"enable\": true,\r\n          \"value_area\": 1420.4657549380909\r\n        }\r\n      },\r\n      \"color\": {\r\n        \"value\": \"#fff\"\r\n      },\r\n      \"shape\": {\r\n        \"type\": \"image\",\r\n        \"stroke\": {\r\n          \"width\": 0,\r\n          \"color\": \"#000000\"\r\n        },\r\n        \"polygon\": {\r\n          \"nb_sides\": 4\r\n        },\r\n        \"image\": {\r\n          \"src\": \"https://i.pinimg.com/originals/89/6e/b6/896eb63c1827bbf6419fa31ef27e2462.png\",\r\n          \"width\": 160,\r\n          \"height\": 160\r\n        }\r\n      },\r\n      \"opacity\": {\r\n        \"value\": 0.5,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 1,\r\n          \"opacity_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"size\": {\r\n        \"value\": 10,\r\n        \"random\": true,\r\n        \"anim\": {\r\n          \"enable\": false,\r\n          \"speed\": 40,\r\n          \"size_min\": 0.1,\r\n          \"sync\": false\r\n        }\r\n      },\r\n      \"line_linked\": {\r\n        \"enable\": false,\r\n        \"distance\": 500,\r\n        \"color\": \"#ffffff\",\r\n        \"opacity\": 0.4,\r\n        \"width\": 2\r\n      },\r\n      \"move\": {\r\n        \"enable\": true,\r\n        \"speed\": 6,\r\n        \"direction\": \"bottom\",\r\n        \"random\": false,\r\n        \"straight\": false,\r\n        \"out_mode\": \"out\",\r\n        \"bounce\": false,\r\n        \"attract\": {\r\n          \"enable\": false,\r\n          \"rotateX\": 600,\r\n          \"rotateY\": 1200\r\n        }\r\n      }\r\n    },\r\n    \"interactivity\": {\r\n      \"detect_on\": \"canvas\",\r\n      \"events\": {\r\n        \"onhover\": {\r\n          \"enable\": true,\r\n          \"mode\": \"bubble\"\r\n        },\r\n        \"onclick\": {\r\n          \"enable\": true,\r\n          \"mode\": \"repulse\"\r\n        },\r\n        \"resize\": true\r\n      },\r\n      \"modes\": {\r\n        \"grab\": {\r\n          \"distance\": 400,\r\n          \"line_linked\": {\r\n            \"opacity\": 0.5\r\n          }\r\n        },\r\n        \"bubble\": {\r\n          \"distance\": 400,\r\n          \"size\": 4,\r\n          \"duration\": 0.3,\r\n          \"opacity\": 1,\r\n          \"speed\": 3\r\n        },\r\n        \"repulse\": {\r\n          \"distance\": 200,\r\n          \"duration\": 0.4\r\n        },\r\n        \"push\": {\r\n          \"particles_nb\": 4\r\n        },\r\n        \"remove\": {\r\n          \"particles_nb\": 2\r\n        }\r\n      }\r\n    },\r\n    \"retina_detect\": true\r\n  }\r\n`;\r\n\r\nParticlesNight = JSON.parse(ParticlesNight);\r\nParticlesSnow = JSON.parse(ParticlesSnow);\r\nParticlesSun = JSON.parse(ParticlesSun);\r\nParticlesCloud = JSON.parse(ParticlesCloud);\r\nParticlesRain = JSON.parse(ParticlesRain);\r\nParticlesRain.particles.shape.image.src=rain;\r\nParticlesCloud.particles.shape.image.src=cloud;\r\n\r\nexport {ParticlesSnow, ParticlesNight, ParticlesSun, ParticlesCloud, ParticlesRain};","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Particles from 'react-particles-js';\r\nimport conditions from './../const/conditionsCodes'\r\nimport {ParticlesSnow, ParticlesNight, ParticlesSun, ParticlesCloud, ParticlesRain} from './../config/dataParticles'\r\n\r\n const Particle = ({now, main}) => {\r\n     \r\n    let params = ParticlesCloud;\r\n    if (conditions.clear.includes(main)) {\r\n        params =  (now) ? ParticlesSun : ParticlesNight;\r\n    } else if (conditions.clouds.includes(main)) {\r\n        params = ParticlesCloud;\r\n    }else if (conditions.rain.includes(main)) {\r\n        params = ParticlesRain;\r\n    } else if (conditions.snow.includes(main)) {\r\n        params = ParticlesSnow;\r\n    } else if (conditions.fog.includes(main)) {\r\n        params = ParticlesNight;\r\n    }\r\n    \r\n    return (\r\n        <ContainerParticles>\r\n            <Particles \r\n                className=\"particles\" \r\n                params={params}\r\n            />\r\n        </ContainerParticles>\r\n    )\r\n}\r\n\r\nconst ContainerParticles = styled.div`\r\n    top: 0;\r\n    width: 200%;\r\n    position: absolute;\r\n    overflow: hidden;\r\n    z-index: -1;\r\n`;\r\n\r\nexport default Particle;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Svg from './Svg'\r\nimport Mountain from './Mountain'\r\nimport Particle from './Particle'\r\n\r\nconst Background = ({weather, mountain}) => {\r\n    return (\r\n        <BgContainer className='background'>\r\n            <Svg now={weather.now}/>\r\n            <Mountain mountain={mountain} weather={weather}/>\r\n            <Particle now={weather.now} main={weather.main}/>   \r\n        </BgContainer>\r\n    )\r\n}\r\n\r\nconst BgContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    z-index: -1;\r\n`;\r\n\r\nexport default Background;","import mountain1 from './../Images/Mountains/001.png'\r\nimport mountain2 from './../Images/Mountains/002.png'\r\nimport mountain3 from './../Images/Mountains/003.png'\r\nimport mountain4 from './../Images/Mountains/004.png'\r\nimport mountain5 from './../Images/Mountains/005.png'\r\nimport mountain6 from './../Images/Mountains/006.png'\r\nimport mountain7 from './../Images/Mountains/007.png'\r\nimport mountain8 from './../Images/Mountains/008.png'\r\nimport mountain9 from './../Images/Mountains/009.png'\r\n\r\nlet mountains = [mountain1, mountain2, mountain3, mountain4, mountain5, mountain6, mountain7, mountain8, mountain9];\r\n\r\nexport default mountains;","export default __webpack_public_path__ + \"static/media/001.5af353b1.png\";","export default __webpack_public_path__ + \"static/media/002.790aef9a.png\";","export default __webpack_public_path__ + \"static/media/003.ff24bfc6.png\";","export default __webpack_public_path__ + \"static/media/004.7da0d612.png\";","export default __webpack_public_path__ + \"static/media/005.8eca4206.png\";","export default __webpack_public_path__ + \"static/media/006.1d77244f.png\";","export default __webpack_public_path__ + \"static/media/007.a12f47b6.png\";","export default __webpack_public_path__ + \"static/media/008.7db6cce3.png\";","export default __webpack_public_path__ + \"static/media/009.043fb78e.png\";","let latitude = 40.4167;\r\nlet longitude = -3.70325;\r\n\r\nnavigator.geolocation.getCurrentPosition(position => {  \r\n    latitude = position.coords.latitude;\r\n    longitude = position.coords.longitude;\r\n});\r\n\r\nexport {latitude, longitude};","import {useState, useRef} from 'react';\r\nimport mountains from './../const/ImgMountains'\r\nimport {latitude, longitude} from './../const/GeoLocation'\r\n\r\n\r\nconst API_KEY=process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\n\r\nconst useWeather = () => {\r\n\r\n    const [weather, setWeather] = useState({});\r\n    const mountain = useRef(mountains[Math.floor(Math.random() * 9)]);\r\n  \r\n    const fetchWeather = (param = null) => {\r\n\r\n        const city = param ? param : localStorage.getItem('lastCity');\r\n        const API_URL = `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&days=1&aqi=no&alerts=no`;\r\n        const query = city ? city : `${latitude},${longitude}`;\r\n        \r\n        fetch(`${API_URL}&q=${query}`)\r\n          .then(response => response.json())\r\n          .then(({location, current, forecast}) => {\r\n            console.log(forecast)\r\n            const newWeather = {\r\n              name: location.name, \r\n              country: location.country,\r\n              temp: current.temp_c, \r\n              humidity: current.humidity, \r\n              unixTime: location.localtime_epoch,\r\n              description: current.condition.text, \r\n              main: current.condition.code,\r\n              tempMax: forecast.forecastday[0].day.maxtemp_c, \r\n              tempMin: forecast.forecastday[0].day.mintemp_c,\r\n              now: current.is_day, hours: []\r\n            };\r\n            // //including higher hours to newWeather hours\r\n            // forecast.forecastday[0].hour.forEach(i=>{\r\n            //   (newWeather.unixTime<=i.time_epoch) &&\r\n            //     newWeather.hours.push({time: i.time, condition: i.condition.code, temp: i.temp_c});\r\n            // });\r\n            \r\n            //update the mountain aleatory in every fetch requests\r\n            mountain.current = mountains[Math.floor(Math.random() * 9)];\r\n            // update the state\r\n            setWeather(newWeather); \r\n            localStorage.setItem('lastCity', `${newWeather.name}, ${newWeather.country}`);\r\n          }).catch(error=>console.log(error));\r\n      }\r\n\r\n      return {fetchWeather, weather, mountain }\r\n};\r\n\r\nexport default useWeather;\r\n","import React, {useEffect} from 'react';\nimport Header from './Components/Header'\nimport WeatherInfo from './Components/WeatherInfo'\nimport {Container} from './Elements/AppElements'\nimport MoreWeatherInfo from './Components/MoreWeatherInfo'\nimport Background from './Components/Background'\n\nimport useWeather from './hooks/useWeather'\n\nconst App = () => {\n\n  const {fetchWeather, weather, mountain} = useWeather();\n  // eslint-disable-next-line\n  useEffect(fetchWeather, []);\n\n  return (\n      <Container className=\"App\" now={weather.now}>\n        <Header fetchWeather={fetchWeather} weather={weather}/>\n        <WeatherInfo weather={weather}/>\n        <MoreWeatherInfo weather={weather} />\n        <Background weather={weather} mountain={mountain}/>\n      </Container>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nlet vh = window.innerHeight * 0.01;\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}